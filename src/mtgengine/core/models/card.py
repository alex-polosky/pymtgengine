import uuid
from django.db import models
from mtgengine.core.models.game_formats import GameFormats
from mtgengine.core.models.foreign_data import ForeignData
from mtgengine.core.models.identifiers import Identifiers
from mtgengine.core.models.leadership_skills import LeadershipSkills
from mtgengine.core.models.legalities import Legalities
from mtgengine.core.models.ruling import Ruling

class Card(models.Model):

    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    artist = models.CharField(max_length=300)
    ascii_name = models.CharField(null=True, blank=True, max_length=300)
    attraction_lights = models.CharField(null=True, blank=True, TODO_is_list=True, max_length=300)
    availability = models.ForeignKey(GameFormats, on_delete=models.CASCADE)
    booster_types = models.CharField(TODO_is_list=True, max_length=300)
    border_color = models.CharField(max_length=300)
    card_parts = models.CharField(TODO_is_list=True, max_length=300)
    color_identity = models.CharField(TODO_is_list=True, max_length=300)
    color_indicator = models.CharField(null=True, blank=True, TODO_is_list=True, max_length=300)
    colors = models.CharField(TODO_is_list=True, max_length=300)
    converted_mana_cost = models.FloatField()
    count = models.IntegerField()
    duel_deck = models.CharField(null=True, blank=True, max_length=300)
    edhrec_rank = models.IntegerField(null=True, blank=True)
    edhrec_saltiness = models.FloatField(null=True, blank=True)
    face_converted_mana_cost = models.FloatField()
    face_flavor_name = models.CharField(null=True, blank=True, max_length=300)
    face_mana_value = models.FloatField()
    face_name = models.CharField(null=True, blank=True, max_length=300)
    finishes = models.CharField(TODO_is_list=True, max_length=300)
    first_printing = models.CharField(null=True, blank=True, max_length=300)
    flavor_name = models.CharField(null=True, blank=True, max_length=300)
    flavor_text = models.CharField(null=True, blank=True, max_length=300)
    foreign_data = models.ForeignKey(ForeignData, TODO_is_list=True, on_delete=models.CASCADE)
    frame_effects = models.CharField(TODO_is_list=True, max_length=300)
    frame_version = models.CharField(max_length=300)
    hand = models.CharField(null=True, blank=True, max_length=300)
    has_alternative_deck_limit = models.BooleanField(null=True, blank=True)
    has_content_warning = models.BooleanField(null=True, blank=True)
    has_foil = models.BooleanField(null=True, blank=True)
    has_non_foil = models.BooleanField(null=True, blank=True)
    identifiers = models.ForeignKey(Identifiers, on_delete=models.CASCADE)
    is_alternative = models.BooleanField(null=True, blank=True)
    is_full_art = models.BooleanField(null=True, blank=True)
    is_funny = models.BooleanField(null=True, blank=True)
    is_online_only = models.BooleanField(null=True, blank=True)
    is_oversized = models.BooleanField(null=True, blank=True)
    is_promo = models.BooleanField(null=True, blank=True)
    is_rebalanced = models.BooleanField(null=True, blank=True)
    is_reprint = models.BooleanField(null=True, blank=True)
    is_reserved = models.BooleanField(null=True, blank=True)
    is_starter = models.BooleanField(null=True, blank=True)
    is_story_spotlight = models.BooleanField(null=True, blank=True)
    is_textless = models.BooleanField(null=True, blank=True)
    is_timeshifted = models.BooleanField(null=True, blank=True)
    keywords = models.CharField(TODO_is_list=True, max_length=300)
    language = models.CharField(max_length=300)
    layout = models.CharField(max_length=300)
    leadership_skills = models.ForeignKey(LeadershipSkills, null=True, blank=True, on_delete=models.CASCADE)
    legalities = models.ForeignKey(Legalities, on_delete=models.CASCADE)
    life = models.CharField(null=True, blank=True, max_length=300)
    loyalty = models.CharField(null=True, blank=True, max_length=300)
    mana_cost = models.CharField(max_length=300)
    mana_value = models.FloatField()
    name = models.CharField(max_length=300)
    number = models.CharField(max_length=300)
    original_printings = models.CharField(TODO_is_list=True, max_length=300)
    original_release_date = models.CharField(null=True, blank=True, max_length=300)
    original_text = models.CharField(null=True, blank=True, max_length=300)
    original_type = models.CharField(null=True, blank=True, max_length=300)
    other_face_ids = models.CharField(TODO_is_list=True, max_length=300)
    power = models.CharField(max_length=300)
    printings = models.CharField(TODO_is_list=True, max_length=300)
    promo_types = models.CharField(TODO_is_list=True, max_length=300)
    rarity = models.CharField(max_length=300)
    rebalanced_printings = models.CharField(TODO_is_list=True, max_length=300)
    reverse_related = models.CharField(null=True, blank=True, TODO_is_list=True, max_length=300)
    rulings = models.ForeignKey(Ruling, TODO_is_list=True, on_delete=models.CASCADE)
    security_stamp = models.CharField(null=True, blank=True, max_length=300)
    side = models.CharField(null=True, blank=True, max_length=300)
    signature = models.CharField(null=True, blank=True, max_length=300)
    subset = models.CharField(null=True, blank=True, TODO_is_list=True, max_length=300)
    subtypes = models.CharField(TODO_is_list=True, max_length=300)
    supertypes = models.CharField(TODO_is_list=True, max_length=300)
    text = models.TextField()
    toughness = models.CharField(max_length=300)
    type = models.CharField(max_length=300)
    types = models.CharField(TODO_is_list=True, max_length=300)
    uuid = models.CharField(max_length=300)
    variations = models.CharField(TODO_is_list=True, max_length=300)
    watermark = models.CharField(null=True, blank=True, max_length=300)
    set_code = models.CharField(max_length=300)
    is_token = models.BooleanField()
